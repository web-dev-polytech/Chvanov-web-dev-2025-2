"""Initial migration

Revision ID: 951435f69c8c
Revises: 
Create Date: 2025-05-29 23:25:11.058802

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '951435f69c8c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(),
               nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('role_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.drop_index(batch_op.f('login'))
        batch_op.create_unique_constraint(batch_op.f('uq_users_login'), ['login'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_users_login'), type_='unique')
        batch_op.create_index(batch_op.f('login'), ['login'], unique=True)
        batch_op.alter_column('role_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(),
               nullable=True)

    # ### end Alembic commands ###
